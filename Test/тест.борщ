//друкр("Ініціалізація пакета тест.борщ ...");
/*
текст = "Якийсь text.";

@"формули.борщ" -> формули

функція точка_входу(число: цілий?, список_продуктів: ...довільний) -> цілий?
{
    друкр("Список продуктів:", список_продуктів);
    якщо(число == 256)
    {
        повернути 1;
    }

    повернути 0;
}

функція отримати_текст() -> рядок
{
    повернути "текст з пакету 'тест'";
}

друкр(логічний + логічний);
*/
/*
функція ууу(з: ...логічний?) -> цілий
{
    повернути -1;
}

ууу(істина);

друкр(функція.__оператор_виклику__(ууу, істина));
друкр(функція.__оператор_виклику__(ууу, істина, хиба));
друкр(функція.__оператор_виклику__(ууу, істина, хиба, нуль));
друкр(функція.__оператор_виклику__(ууу, 111));
// друкр(функція.__оператор_виклику__(ууу, 111, 322));

*/

// борщ2 = копіювати(борщ);
// борщ2.додати_солі(3.0);
// друкр(борщ2.__атрибути__);

// друкр(Борщ);
// друкр(Борщ.__атрибути__);

//словн = {"Цифра": 1, "Привіт": ["Світе", "!"]};

//друкр(словн);
//друкр(словн.вилучити("Цифра"));
//друкр(словн);
//друкр(словник.__атрибути__);


/*
функція стеля(х: дійсний): цілий
{
    _х = дійсний(цілий(х));
    якщо(_х < х)
    {
        _х = _х + 1.0;
    }

    повернути цілий(_х);
}

ст = стеля(1.7);
друкр(ст);

ст = стеля(1.0);
друкр(ст);

ст = стеля(-1.7);
друкр(ст);

друкр(2 + 2 ** 2 * 2);
*/

/*
пес_1 = хиба;
пес_2 = "";
пес_3 = 0.1;

якщо (пес_1)
{
    друкр(1);
}
інакше якщо (пес_2)
{
    друкр(2);
}
інакше якщо (пес_3)
{
    друкр(3);
}
інакше
{
    друкр(4);
}
*/

/*
розмір, опис = 0.3, "нервний";
друкр("Розмір:", розмір, ", Опис:", опис);

{
    розмір = 1;
    друкр("Розмір:", розмір);
}

друкр("Розмір:", розмір);

спс = [1, 2, 3.4, 5.56, "789"];
друкр("Спс:", спс);
*/

/*
спс = [1, 2, 3.4, 5.56, "789"];
друкр("Спс:", спс);

а, б, в, г = 1, 2, 3, 4;

друкр("Букви:", а, б, в, г);

а1, а2 = 1, 2;
друкр("А1, А2:", а1, а2);

а2, а1 = а1, а2;
друкр("А1, А2:", а1, а2);

фції = пакет("!/математика/функції.борщ");
друкр(фції);

стеля = фції.стеля;
друкр(фції.стеля);
друкр(стеля);

друкр(стеля(-1.1));

фції.ппп = стеля;
друкр(фції.ппп);

фції.ппп.щщщ = 777;
друкр(фції.ппп.__атрибути__);
//друкр(тип(фції.ппп(7.8)).__атрибути__);

функція яя() {}
функція хх() -> довільний { повернути яя; }

фції.хх = хх;
друкр(фції.хх().__атрибути__);
фції.хх().аа = 1;
//фції.хх() = 1;
друкр(фції.хх().__атрибути__);
*/

/*
фції = пакет("!/математика/функції.борщ");

друкр(фції.стеля(-1.1));
друкр(фції.стеля(1.1));
друкр(фції.підлога(-1.1));
друкр(фції.підлога(1.1));

щось_до_рядка = (щось: довільний): рядок =>
{
    повернути рядок(щось);
};

друкр(щось_до_рядка("ЩÖсь!"));

список_чогось = [1 + 2, 4, () => { друкр("є"); }];
друкр(список_чогось);

фц = список_чогось[2];
фц();

якийсь_словник = {
    1: 2.2,
    "3": щось_до_рядка,
    7.9: ["тут", 2, "слова"]
};

друкр(якийсь_словник);
*/

/*
константи = пакет("!/математика/константи.борщ");

клас Борщ
{
    рекомендована_кількість_води = (бурачки: цілий, бульба: цілий): дійсний =>
    {
        повернути (1.5 * бурачки + 2.7 * бульба) / 1.1;
    };

    функція __конструктор__(я: Борщ, вода: дійсний, бурачки: цілий)
    {
        // в літрах
        я.вода = вода;

        // в штуках
        я.бурачки = бурачки;

        // в штуках
        я.бульба = 0;

        // в зубчиках
        я.часничок = константи.макс_ціле;

        // в ложках
        я.сіль = 0.0;
    }

    функція __рядок__(я: Борщ): рядок
    {
        рядок_з_бурачками = рядок(я.бурачки);
        якщо (я.бурачки == 1)
        {
            рядок_з_бурачками = рядок_з_бурачками + " бурачком";
        }
        інакше
        {
            рядок_з_бурачками = рядок_з_бурачками + " бурачками";
        }

        повернути "Борщ з " + рядок(я.вода) + " л води, " + рядок_з_бурачками + ".";
    }

    функція додати_солі(я: Борщ, кількість: дійсний): Борщ
    {
        я.сіль = я.сіль + кількість;
        повернути я;
    }

    функція додати_бульби(я: Борщ, кількість: цілий): Борщ
    {
        я.бульба = я.бульба + кількість;
        повернути я;
    }
}

борщ = Борщ(2.5, 3).додати_солі(1.5).додати_бульби(6);
друкр(борщ);
друкр(борщ.__атрибути__);

друкр(Борщ.рекомендована_кількість_води(3, 6), "літрів");
*/

/*
клас Рядок
{
    функція __конструктор__(я: Рядок, значення: рядок)
    {
        я._рядок = значення;
    }
}

клас Тест
{
    функція __конструктор__(я: Тест)
    {
        я.спс = [1, 2, 3, Рядок("jhgtfrdtgy")];
    }

    функція ззз(я: Тест): список
    {
        повернути [1, 2, Тест(), Рядок("jhgtfrdtgy")];
    }

    тест = (т: довільний): нульовий =>
    {
        //т = 10.7;
        друкр(т);
    };
}

//тест = Тест();
//тест.спс[2] = Тест();

друкр(Рядок("shgy567").__атрибути__);

друкр(Тест().ззз()[2:3]);
Тест().ззз()[2:3][0] = 1;

друкр(Тест().ззз()[2].спс[3]._рядок[8]);

Тест.тест(1);
*/

/*
місяць = цілий;

друк_номера_місяця = (м: місяць) => {
    друкр(м);
};

Січень   = 1;
Лютий    = 2;
Березень = 3;
Квітень  = 4;
Травень  = 5;
Червень  = 6;
Липень   = 7;
Серпень  = 8;
Вересень = 9;
Жовтень  = 10;
Листопад = 11;
Грудень  = 12;

друк_номера_місяця(Січень);

місяці = [
    "Січень", "Лютий", "Березень", "Травень", "Червень", "Липень",
    "Серпень", "Вересень", "Жовтень", "Листопад", "Грудень"
];

число = 1.2e-2;

друкр(число);

ж = 0;
цикл (к : 1 .. 4) {
    цикл (і : 0 .. довжина(місяці)) {
        якщо (і <= ж) {
            друк(", ");
        }
        інакше {
            місяці = ["Дощень"] + місяці;
            ж = ж + 1;
            перервати;
        }

        друк(місяці[і]);
    }

    друкр();
}
*/

/*
сорт     = імпорт("!/сортування");
мат_функ = імпорт("!/математика/функції");

масив = [3, 2, 6, 1, -1, -2, -3, 0, 33, 11];

друкр(масив);
друкр(сорт.сортування_злиттям(масив));

друкр();
друкр(масив);
друкр(сорт.сортування_вибором(масив));

друкр();
друкр(масив);
друкр(сорт.сортування_вставкою(масив));

друкр(мат_функ.факторіал(5));
друкр(мат_функ.степінь(5, 2));
*/

/*
стек = імпорт("!/колекції/стек");

Стек = стек.Стек;

ст = Стек();
друкр(ст);

ст.додати(1);
ст.додати("рпе5п678ш№№");
ст.додати(-3.7);

друкр("Розмір: ", ст.розмір());
друкр(ст);

друкр(ст.вилучити());

друкр("Розмір: ", ст.розмір());
друкр(ст);

ст.вилучити();
друкр(ст);

ст.вилучити();
друкр(ст);

друкр("===============");

результат, помилка = ст.вершина();
якщо (помилка) {
    панікувати(помилка);
}
інакше {
    друкр("Результат: ", результат);
}

друкр("===============");
*/

//1 == "ііі" && (1 != 2);

/*
клас Тварина {

    функція __конструктор__(я: Тварина, маса: дійсний) {
        я.маса = маса;
    }
}

клас Кіт : Тварина {

    функція __конструктор__(я: Кіт, маса: дійсний, ім_я: рядок) {
        Тварина.__конструктор__(я, маса);
        я.ім_я = ім_я;
    }
}

друкр(Кіт(5.7, "Яблуко"));
друкр(Кіт(5.7, "Яблуко"));
друкр();
*/

/*
б = (й: логічний, к: дійсний) => {
    створити_помилку("Ой, щось сталося...");
};

функція створити_помилку(повідомлення: рядок) {
    п = Помилка(повідомлення);
    панікувати(п);
};

функція в() {
    б(хиба, 2.7);
}

функція вхід() {
    в();
}

вхід();
*/

/*
клас А заключний {
}

клас Б : А {
}

б = Б();

друкр(б);
друкр(б);

б.щось = 3.7;
друкр(б.щось);
*/


дока = `Це
  якась
  дока.
`;

друкр(дока);

стд = імпорт("!/помилки");

фyнкція_1 = () => {
    i = 0;
    цикл {
        якщо (і == 10) {
            перервати;
        }

        небезпечно {
            панікувати стд.ВнутрішняПомилка("Бла-бла");
        }
        піймати (п: Помилка) {
            якщо (і == 2) {
                панікувати п;
            }

            друкр("ПЕРЕХОПЛЕНО: ", п);
        }

        друкр(і);
        і = і + 1;
    }
};

функція функція_2() {
    функція_1();
}

//функція_2();


{
    функція_2.gtc = ["ііііі"];
    друкр(функція_2.gtc);

    функція_2.gtc[0][2] = "s";
    друкр(функція_2.gtc);
    друкр(функція_2.gtc[0][2:]);

    функція_2.функ = (): рядок => {
        повернути "ННННН";
    };

    друкр(функція_2.функ);

    функція_2.функ()[1] = "З";
    друкр(функція_2.функ());
}


//а: цілий = 10.7;
//а: логічний = 0;

//друкр(а);
//друкр(б);

/*
функція ккк(): цілий
    якщо (істина)
        // ...
    кінець;
кінець;


ф = (): дійсний
    // ...
кінець;

змінна: цілий = 1;

клас А : Б

    функція __конструктор__()
        // ...
    кінець;

    функція щось()
        // ...
    кінець;

кінець;
*/

ф = 5 * (2 - 8);
друкр(ф);
