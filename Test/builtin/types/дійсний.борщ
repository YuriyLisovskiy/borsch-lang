// Тестування унарних операторів
переконатися(-4.1 == 1 - 5.1, "унарний оператор працює неправильно: -");
переконатися(-4.0 == 1 - 5, "унарний оператор працює неправильно: -");
переконатися(-(-4.4) == 4.4, "унарний оператор працює неправильно: -");
переконатися(+5.0 == 5, "унарний оператор працює неправильно: +");

// Тестування умовних операторів
переконатися(1.1 == 1.1, "оператор працює неправильно: ==");
переконатися(1.0 == 1, "оператор працює неправильно: ==");

переконатися(1.1 != 1.0, "оператор працює неправильно: !=");
переконатися(1.1 != 1, "оператор працює неправильно: !=");

переконатися(1.99 < 2.1, "оператор працює неправильно: <");
переконатися(1.99 < 2, "оператор працює неправильно: <");

переконатися(1.99 <= 1.99, "оператор працює неправильно: <=");
переконатися(2.13 <= 2.22, "оператор працює неправильно: <=");
переконатися(2.13 <= 3, "оператор працює неправильно: <=");

переконатися(3.9 > 1.2, "оператор працює неправильно: >");
переконатися(3.9 > 1, "оператор працює неправильно: >");

переконатися(3.3 >= 3.3, "оператор працює неправильно: >=");
переконатися(3.3 >= 2, "оператор працює неправильно: >=");

// Тестування арифметичних операторів
переконатися(1.1 + 2.2 == 3.3000000000000003, "оператор працює неправильно: +");
переконатися(1.1 + 2 == 3.1, "оператор працює неправильно: +");
переконатися(2.5 + 0 == 2.5, "оператор працює неправильно: +");
переконатися(2.5 + 0.0 == 2.5, "оператор працює неправильно: +");
переконатися(0.2 + 2.0 == 2.2, "оператор працює неправильно: +");
переконатися(-2.11 + 1.4 == -0.71, "оператор працює неправильно: +");
переконатися(-3.1 + 7 == 3.9, "оператор працює неправильно: +");

переконатися(1.6 - 2.1 == -0.5, "оператор працює неправильно: -");
переконатися(2.1 - 0.0 == 2.1, "оператор працює неправильно: -");
переконатися(0.0 - 2 == -2.0, "оператор працює неправильно: -");
переконатися(2.9 - 1 == 1.9, "оператор працює неправильно: -");
переконатися(3.1 - 7.1 == -3.9999999999999996, "оператор працює неправильно: -");

переконатися(1.1 / 2.0 == 0.55, "оператор працює неправильно: /");
переконатися(0.0 / 2.1 == 0, "оператор працює неправильно: /");
переконатися(2.5 / 1.123 == 2.226179875333927, "оператор працює неправильно: /");
переконатися(3.9 / 7 == 0.5571428571428572, "оператор працює неправильно: /");
переконатися(-3.9 / 7 == -0.5571428571428572, "оператор працює неправильно: /");
переконатися(2.43 / -5.8 == -0.41896551724137937, "оператор працює неправильно: /");

переконатися(1.0 * 2 == 2.0, "оператор працює неправильно: *");
переконатися(2.5 * 0 == 0, "оператор працює неправильно: *");
переконатися(0.0 * 2.3 == 0, "оператор працює неправильно: *");
переконатися(2.1 * 1.0 == 2.1, "оператор працює неправильно: *");
переконатися(3.4 * 7.1 == 24.139999999999997, "оператор працює неправильно: *");
переконатися(-3.4 * 7.1 == -24.139999999999997, "оператор працює неправильно: *");
переконатися(2.0 * -5.1 == -2.0 * 5.1, "оператор працює неправильно: *");

переконатися(5.3 % 2.1 == 1.0999999999999996, "оператор працює неправильно: %%");
переконатися(5.11 % 1.0 == 0.11000000000000032, "оператор працює неправильно: %%");
переконатися(5.4 % 5 == 0.40000000000000036, "оператор працює неправильно: %%");
переконатися(0.0 % 5.7 == 0, "оператор працює неправильно: %%");

переконатися(1.0 ** 5.0 == 1.0, "оператор працює неправильно: **");
переконатися(1.1 ** 0 == 1, "оператор працює неправильно: **");
переконатися(2.5 ** 1 == 2.5, "оператор працює неправильно: ** " + рядок(2.5 ** 1));
переконатися(2.6778 ** 0 == 1, "оператор працює неправильно: **");
переконатися(2.4 ** 2.4 == 8.175361775184633, "оператор працює неправильно: **");
переконатися(2.88 ** 3.0 == 23.887871999999998, "оператор працює неправильно: **");
переконатися(35.1 ** 7.3 == 190871879593.19547, "оператор працює неправильно: **");
переконатися(2.55 ** (-1.1) == 0.35711311627189235, "оператор працює неправильно: **");
переконатися(2.0 ** (-2) == 0.25, "оператор працює неправильно: **");
