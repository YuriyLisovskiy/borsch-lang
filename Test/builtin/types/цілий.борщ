// Тестування унарних операторів (крім побітового заперечення)
переконатися(-4 == 1 - 5, "унарний оператор працює неправильно: -");
переконатися(-4 == 1.0 - 5.0, "унарний оператор працює неправильно: -");
переконатися(-(-4) == 4, "унарний оператор працює неправильно: -");
переконатися(-(-4) == 4.0, "унарний оператор працює неправильно: -");
переконатися(+5 == 5, "унарний оператор працює неправильно: +");
переконатися(+5 == 5.0, "унарний оператор працює неправильно: +");

// Тестування умовних операторів
переконатися(1 == 1, "оператор працює неправильно: ==");
переконатися(1 == 1.0, "оператор працює неправильно: ==");

переконатися(1 != 2, "оператор працює неправильно: !=");
переконатися(1 != 2.1, "оператор працює неправильно: !=");

переконатися(1 < 2, "оператор працює неправильно: <");
переконатися(1 < 2.0, "оператор працює неправильно: <");

переконатися(1 <= 2, "оператор працює неправильно: <=");
переконатися(1 <= 2.2, "оператор працює неправильно: <=");
переконатися(2 <= 2, "оператор працює неправильно: <=");
переконатися(2 <= 2.0, "оператор працює неправильно: <=");

переконатися(3 > 1, "оператор працює неправильно: >");
переконатися(3 > 1.9, "оператор працює неправильно: >");

переконатися(3 >= 3, "оператор працює неправильно: >=");
переконатися(3 >= 3.0, "оператор працює неправильно: >=");
переконатися(3 >= 2, "оператор працює неправильно: >=");
переконатися(3 >= 2.99, "оператор працює неправильно: >=");

// Тестування арифметичних операторів
переконатися(1 + 2 == 3, "оператор працює неправильно: +");
переконатися(1 + 2.4 == 3.4, "оператор працює неправильно: +");
переконатися(2 + 0 == 2, "оператор працює неправильно: +");
переконатися(2 + 0.1 == 2.1, "оператор працює неправильно: +");
переконатися(0 + 2 == 2, "оператор працює неправильно: +");
переконатися(0 + 2.6 == 2.6, "оператор працює неправильно: +");
переконатися(-2 + 1 == -1, "оператор працює неправильно: +");
переконатися(-2 + 1.0 == -1.0, "оператор працює неправильно: +");
переконатися(-3 + 7 == 4, "оператор працює неправильно: +");
переконатися(-3 + 7.9 == 4.9, "оператор працює неправильно: +");

переконатися(1 - 2 == -1, "оператор працює неправильно: -");
переконатися(1 - 2.0 == -1.0, "оператор працює неправильно: -");
переконатися(2 - 0 == 2, "оператор працює неправильно: -");
переконатися(2 - 0.0 == 2.0, "оператор працює неправильно: -");
переконатися(0 - 2 == -2, "оператор працює неправильно: -");
переконатися(0 - 2.66 == -2.66, "оператор працює неправильно: -");
переконатися(2 - 1 == 1, "оператор працює неправильно: -");
переконатися(2 - 1.4 == 0.6000000000000001, "оператор працює неправильно: -");
переконатися(3 - 7 == -4, "оператор працює неправильно: -");
переконатися(3 - 7.0 == -4.0, "оператор працює неправильно: -");

переконатися(1 / 2 == 0.5, "оператор працює неправильно: /");
переконатися(1 / 2.0 == 0.5, "оператор працює неправильно: /");
переконатися(0 / 2 == 0, "оператор працює неправильно: /");
переконатися(0 / 2.1 == 0, "оператор працює неправильно: /");
переконатися(2 / 1 == 2, "оператор працює неправильно: /");
переконатися(2 / 1.1 == 1.8181818181818181, "оператор працює неправильно: /");
переконатися(3 / 7 == 0.42857142857142855, "оператор працює неправильно: /");
переконатися(3 / 7.0 == 0.42857142857142855, "оператор працює неправильно: /");
переконатися(-3 / 7 == -0.42857142857142855, "оператор працює неправильно: /");
переконатися(-3 / 7.1 == -0.4225352112676057, "оператор працює неправильно: /");
переконатися(2 / -5 == -0.4, "оператор працює неправильно: /");
переконатися(2 / -5.0 == -0.4, "оператор працює неправильно: /");

переконатися(1 * 2 == 2, "оператор працює неправильно: *");
переконатися(1 * 2.1 == 2.1, "оператор працює неправильно: *");
переконатися(2 * 0 == 0, "оператор працює неправильно: *");
переконатися(2 * 0.0 == 0, "оператор працює неправильно: *");
переконатися(0 * 2 == 0, "оператор працює неправильно: *");
переконатися(0 * 2.9 == 0, "оператор працює неправильно: *");
переконатися(2 * 1 == 2, "оператор працює неправильно: *");
переконатися(2 * 1.1 == 2.2, "оператор працює неправильно: *");
переконатися(3 * 7 == 21, "оператор працює неправильно: *");
переконатися(3 * 7.0 == 21, "оператор працює неправильно: *");
переконатися(-3 * 7 == -21, "оператор працює неправильно: *");
переконатися(-3 * 7.0 == -21.0, "оператор працює неправильно: *");
переконатися(2 * -5 == -2 * 5, "оператор працює неправильно: *");
переконатися(2 * -5.4 == -2 * 5.4, "оператор працює неправильно: *");

переконатися(5 % 2 == 1, "оператор працює неправильно: %");
переконатися(5 % 2.5 == 0.0, "оператор працює неправильно: %");
переконатися(5 % 1 == 0, "оператор працює неправильно: %");
переконатися(5 % 1.6 == 0.19999999999999973, "оператор працює неправильно: %");
переконатися(5 % 5 == 0, "оператор працює неправильно: %");
переконатися(5 % 5.8 == 5, "оператор працює неправильно: %");
переконатися(0 % 5 == 0, "оператор працює неправильно: %");
переконатися(0 % 5.1 == 0.0, "оператор працює неправильно: %");

переконатися(1 ** 5 == 1, "оператор працює неправильно: **");
переконатися(1 ** 5.11 == 1.0, "оператор працює неправильно: **");
переконатися(1 ** 0 == 1, "оператор працює неправильно: **");
переконатися(1 ** 0.0 == 1.0, "оператор працює неправильно: **");
переконатися(2 ** 1 == 2, "оператор працює неправильно: **");
переконатися(2 ** 1.4 == 2.6390158215457884, "оператор працює неправильно: **");
переконатися(2 ** 0 == 1, "оператор працює неправильно: **");
переконатися(2 ** 0.0 == 1.0, "оператор працює неправильно: **");
переконатися(2 ** 0.12 == 1.086734862526058, "оператор працює неправильно: **");
переконатися(2 ** 2 == 4, "оператор працює неправильно: **");
переконатися(2 ** 2.77 == 6.821079134143654, "оператор працює неправильно: **");
переконатися(2 ** 3 == 8, "оператор працює неправильно: **");
переконатися(2 ** 3.0 == 8.0, "оператор працює неправильно: **");
переконатися(35 ** 7 == 64339296875, "оператор працює неправильно: **");
переконатися(35 ** 6.99 == 62091997311.44094, "оператор працює неправильно: **");
переконатися(2 ** (-1) == 0.5, "оператор працює неправильно: **");
переконатися(2 ** (-1.1) == 0.4665164957684037, "оператор працює неправильно: **");
переконатися(2 ** (-2) == 0.25, "оператор працює неправильно: **");
переконатися(2 ** (-2.0) == 0.25, "оператор працює неправильно: **");

// Тестування побітових операторів
переконатися(5667 << 4 == 90672, "оператор працює неправильно: <<");
переконатися(5 << 0 == 5, "оператор працює неправильно: <<");
переконатися(5 << 1 == 10, "оператор працює неправильно: <<");

переконатися(5667 >> 4 == 354, "оператор працює неправильно: >>");
переконатися(5667 >> 0 == 5667, "оператор працює неправильно: >>");
переконатися(5667 >> 1 == 2833, "оператор працює неправильно: >>");

переконатися(5 | 2 == 7, "оператор працює неправильно: |");
переконатися(5 | 0 == 5, "оператор працює неправильно: |");
переконатися(5 | 1 == 5, "оператор працює неправильно: |");
переконатися(5 | -5 == -1, "оператор працює неправильно: |");
переконатися(0 | 0 == 0, "оператор працює неправильно: |");

переконатися(6 ^ 9 == 15, "оператор працює неправильно: ^");
переконатися(6 ^ 0 == 6, "оператор працює неправильно: ^");
переконатися(7 ^ 1 == 6, "оператор працює неправильно: ^");
переконатися(-7 ^ 1 == -8, "оператор працює неправильно: ^");
переконатися(-7 ^ -1 == 6, "оператор працює неправильно: ^");
переконатися(7 ^ -1 == -8, "оператор працює неправильно: ^");
переконатися(1 ^ 0 == 1, "оператор працює неправильно: ^");

переконатися(22 & 1 == 0, "оператор працює неправильно: &");
переконатися(3 & 0 == 0, "оператор працює неправильно: &");
переконатися(-5 & 11 == 11, "оператор працює неправильно: &");
переконатися(-8 & -1 == -8, "оператор працює неправильно: &");
переконатися(8 & -1 == 8, "оператор працює неправильно: &");
переконатися(-1 & 0 == 0, "оператор працює неправильно: &");
переконатися(0 & 0 == 0, "оператор працює неправильно: &");

переконатися(~3 == -4, "оператор працює неправильно: ~");
переконатися(~1 == -2, "оператор працює неправильно: ~");
переконатися(~(-1) == 0, "оператор працює неправильно: ~");
переконатися(~(-7) == 6, "оператор працює неправильно: ~");
переконатися(~0 == -1, "оператор працює неправильно: ~");
