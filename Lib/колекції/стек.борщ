/**
 Стек — це лінійна структура даних, яка зберігає елементи
 за принципом "останній прийшов/першим вийшов". Новий елемент
 у стек додають з одного кінця, а видаляють з іншого.
*/
клас Стек
{
    функція __конструктор__(я: Стек)
    {
        я._список = [];
    }

    функція __довжина__(я: Стек) -> цілий
    {
    	повернути я.розмір();
    }

    функція __рядок__(я: Стек) -> рядок
    {
        повернути рядок(я._список);
    }

    /**
     Часова складність: O(1)
    */
    функція порожній(я: Стек) -> логічний
    {
    	повернути я.розмір() == 0;
    }

    /**
     Часова складність: O(1)
    */
    функція розмір(я: Стек) -> цілий
    {
    	повернути довжина(я._список);
    }

    /**
     Повертає посилання на верхній елемент стеку.

     Часова складність: O(1)
    */
    функція вершина(я: Стек) -> довільний
    {
    	повернути я._список[-1];
    }

    /**
     Вставляє елемент у верхню частину стеку.

     Часова складність: O(1)
    */
    функція додати(я: Стек, елемент: довільний)
    {
    	я._список = додати(я._список, елемент);
    	повернути нуль;
    }

    /**
     Видаляє верхній елемент стеку.

     Часова складність: O(1)
    */
    функція вилучити(я: Стек) -> довільний
    {
    	елемент = я.вершина();
    	я._список = я._список[0:-2];
    	повернути елемент;
    }

    /** Це статична функція. */
    статична_ф = функція () {};
}

/** Це функція-песто! */
функція песто() -> довільний?
{
}

друкр("Документ:", "\n", песто.__документ__);
друкр("Документ:", "\n", Стек.__документ__);
друкр("Документ:", "\n", Стек.додати.__документ__);
друкр("Документ:", "\n", Стек.статична_ф.__документ__);
друкр();
