
стд = імпорт("!/стандартні");

Помилка = стд.Помилка; 

__експортовані__ = ["Стек"];

/**
 Стек — це лінійна структура даних, яка зберігає елементи
 за принципом "останній прийшов/перший вийшов". Новий елемент
 у стек додають з одного кінця, а видаляють з іншого.
*/
клас Стек {

    __документ__ = "";

    функція __конструктор__(я: Стек) {
        я._список = [];
    }

    функція __довжина__(я: Стек): цілий {
    	повернути я.розмір();
    }

    функція __рядок__(я: Стек): рядок {
        повернути рядок(я._список);
    }

    /**
     Часова складність: O(1)
    */
    функція порожній(я: Стек): логічний {
    	повернути я.розмір() == 0;
    }

    /**
     Часова складність: O(1)
    */
    функція розмір(я: Стек): цілий {
    	повернути довжина(я._список);
    }

    /**
     Повертає верхній елемент стеку.

     Часова складність: O(1)
    */
    функція вершина(я: Стек): (довільний, Помилка?) {
        якщо (я.порожній()) {
            повернути 0.0, Помилка("стек порожній");
        }

    	повернути я._список[-1], нуль;
    }

    /**
     Вставляє елемент у верхню частину стеку.

     Часова складність: O(1)
    */
    функція додати(я: Стек, елемент: довільний) {
    	я._список = додати(я._список, елемент);
    	повернути нуль;
    }

    /**
     Видаляє верхній елемент стеку.

     Часова складність: O(1)
    */
    функція вилучити(я: Стек): (довільний, Помилка?) {
        якщо (я.порожній()) {
            повернути нуль, Помилка("стек порожній");
        }

    	елемент, помилка = я.вершина();
        якщо (помилка) {
            повернути нуль, помилка;
        }

    	я._список = я._список[0:-1];
    	повернути елемент, нуль;
    }
}
