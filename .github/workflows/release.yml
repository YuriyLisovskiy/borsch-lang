name: Release
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  versioning:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          COMMIT_MESSAGE: Update build version to
      - name: Create tag
        run: |
          git config --global user.name "${{ secret.DEPLOY_USERNAME }}"
          git config --global user.email "${{ secret.DEPLOY_USER_EMAIL }}"
          echo ${{ github.ref_name }} > version
          git commit -m "${{ env.COMMIT_MESSAGE }} $(cat version)"
          git push
  build:
    needs:
      - versioning
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: linux
            arch: 386
          - os: linux
            arch: amd64
          - os: linux
            arch: arm
          - os: linux
            arch: arm64

          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64

          - os: windows
            arch: amd64
          - os: windows
            arch: 386
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build
        run: |
          export GOOS=${{ matrix.platform.os }}
          export GOARCH=${{ matrix.platform.arch }}
          export BUILD_TIME=`LC_ALL=uk_UA.utf8 date '+%b %d %Y, %T'`
          export LDFLAGS="-X 'github.com/YuriyLisovskiy/borsch-lang/internal/config.Time=$BUILD_TIME'"
          mkdir -p bin
          go build -ldflags $LDFLAGS -o bin/borsch internal/cmd/main.go
      - name: Compose build for *nix
        if: matrix.platform.os == 'linux' || matrix.platform.os == 'darwin'
        run: |
          mkdir build
          cp -r ./bin ./build
          cp -r ./stdlib ./build
          cp ./scripts/install.sh ./scripts/uninstall.sh ./build
      - name: Update binary file name for Windows
        if: matrix.platform.os == 'windows'
        run: mv ./bin/borsch ./bin/borsch.exe
      - name: Compose build for Windows
        if: matrix.platform.os == 'windows'
        run: |
          mkdir build
          cp -r ./bin ./build
          cp -r ./stdlib ./build
          cp ./scripts/*.bat ./build
      - name: Upload build to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: borsch-${{ matrix.platform.os }}-${{ matrix.platform.arch }}-$(cat version)
          path: ./build
          retention-days: 10
  release:
    needs:
      - build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Create a release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          files: borsch-*-$(cat version)
