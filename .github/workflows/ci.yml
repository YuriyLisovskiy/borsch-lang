name: CI
on:
  push:
    branches:
    paths-ignore:
      - 'docs/**'
      - 'misc/**'
      - 'LICENSE'
      - 'mkdocs.yml'
      - 'README.md'
      - 'version'
jobs:
#  TODO: add lint check
#  lint:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
  test-interpreter:
    runs-on: ${{ matrix.system }}
    strategy:
      fail-fast: false
      matrix:
        system:
          - macos-11
          - macos-12
          - ubuntu-20.04
          - ubuntu-22.04
          - windows-2019
          - windows-2022
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Test
        run: go test -v ./...
  test-language:
    needs:
      - test-interpreter
    runs-on: ${{ matrix.system }}
    strategy:
      fail-fast: false
      matrix:
        system:
          - macos-11
          - macos-12
          - ubuntu-20.04
          - ubuntu-22.04
          - windows-2019
          - windows-2022
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Run language tests
        shell: bash
        env:
          BORSCH_LIB: ./build/stdlib
        run: |
          chmod +x ./scripts/ci_test.sh
          ./scripts/ci_test.sh ./test
  versioning:
    needs:
      - test-interpreter
      - test-language
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.DEPLOY_ACCESS_TOKEN }}
        env:
          COMMIT_MESSAGE: Update build version to
      - name: Create tag
        run: |
          git config --global user.name "${{ secret.DEPLOY_USERNAME }}"
          git config --global user.email "${{ secret.DEPLOY_USER_EMAIL }}"
          echo ${$(cat version)%-*}-$(git rev-parse --short HEAD) > version
          git commit -m "${{ env.COMMIT_MESSAGE }} $(cat version)"
          git push
